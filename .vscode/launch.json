{
    // After creation, this file must be added to the .gitignore so that local changes aren't
    // tracked (e.g. changes to the entrypoint program name).
    // If any changes must be made, remove the file from the .gitignore, make changes,
    // push changes, and then re-add this file to the .gitignore.
    "configurations": [
        {
            "name": "C/C++: clang build and debug active file",
            "type": "cppdbg",
            "request": "launch",
            // Replacing the following line, which was originally generated by VSC, with the line below because
            // the generated line tries to run source file that is currently open (rather than the final product
            // of compilation)
            //"program": "${fileDirname}/${fileBasenameNoExtension}",
            "program": "${workspaceFolder}/helloworld",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": true, // Solves debugging console application that requires input; see https://stackoverflow.com/questions/41074170/unable-to-perform-this-action-because-the-process-is-running
            "MIMode": "lldb",
            "preLaunchTask": "C/C++: clang build active file"
        },
        {
            "name": "C/C++: gcc build and debug active file",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}\\helloworld.exe",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": true,
            "MIMode": "gdb",
            "preLaunchTask": "C/C++: gcc.exe build active file"
        },
        {
            "name": "C/C++: MSVC cl build and debug active file",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}\\helloworld.exe",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            // N.B. In order to use the MSVC compiler toolchain, you must run VSCode from the Developer Command Prompt
            // If externalConsole is set to true, then the terminal spawned isn't inherited from the terminal used to run
            // VSCode, and so then there are likely environment variables that are not set and the MSVC debugger fails
            // to attach.
            "externalConsole": false,
            "MIMode": "gdb",
            "preLaunchTask": "C/C++: cl.exe build active file"
        }
    ],
    "version": "2.0.0"
}